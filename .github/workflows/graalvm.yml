name: GraalVM CI

on:
  push:
    branches-ignore:
      - master
  schedule:
    - cron: '26 9 13 * *'

jobs:
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      env:
        REVISION: ${{ github.sha }}
      run: |
        wget -q https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.0.0/graalvm-ce-java11-darwin-amd64-20.0.0.tar.gz
        tar xzf graalvm-ce-java11-darwin-amd64-20.0.0.tar.gz
        export JAVA_HOME="$(pwd)/graalvm-ce-java11-20.0.0/Contents/Home/"
        ${JAVA_HOME}/bin/gu install native-image
        brew install upx
        ./mvnw \
          --batch-mode \
          -Dsha1="${GITHUB_SHA}" \
          -Drevision="${REVISION}" \
          package
        "./target/wait-for-ports-macos-${REVISION}"
        upx --brute "target/wait-for-ports-macos-${REVISION}"
        "./target/wait-for-ports-macos-${REVISION}"
        mkdir target/artifacts
        cp target/wait-for-ports-* target/artifacts
    - uses: actions/upload-artifact@v1
      with:
        name: wait-for-ports artifacts from ${{runner.os}} build
        path: target/artifacts
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      env:
        REVISION: ${{ github.sha }}
      run: |
        wget -q https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.0.0/graalvm-ce-java11-linux-amd64-20.0.0.tar.gz
        tar xzf graalvm-ce-java11-linux-amd64-20.0.0.tar.gz
        export JAVA_HOME="$(pwd)/graalvm-ce-java11-20.0.0"
        ${JAVA_HOME}/bin/gu install native-image
        sudo apt-get install upx-ucl
        ./mvnw \
          --batch-mode \
          -Dsha1="${GITHUB_SHA}" \
          -Drevision="${REVISION}" \
          package
        "./target/wait-for-ports-linux-${REVISION}"
        upx --brute target/wait-for-ports-linux-${REVISION}
        "./target/wait-for-ports-linux-${REVISION}"
        mkdir target/artifacts
        cp target/wait-for-ports-* target/artifacts
    - uses: actions/upload-artifact@v1
      with:
        name: wait-for-ports artifacts from ${{runner.os}} build
        path: target/artifacts
  windows:
    runs-on: windows-latest
    env:
      VCVARS_BAT: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - run: choco install graalvm --version=20.0.0 --no-progress
    - run: choco install upx --version=3.96 --no-progress
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: .m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      shell: cmd
      env:
        JAVA_HOME: C:\Program Files\GraalVM\graalvm-ce-java11-20.0.0
        REVISION: ${{ github.sha }}
      run: |
        call "%JAVA_HOME%\bin\gu" install native-image
        call "%VCVARS_BAT%"
        call .\mvnw --batch-mode --settings .\.mvn\github-actions-windows-maven-settings.xml -Dsha1="%GITHUB_SHA%" -Drevision="%REVISION%" package
        .\target\wait-for-ports-windows-%REVISION%.exe
        upx --brute target/wait-for-ports-windows-%REVISION%.exe
        .\target\wait-for-ports-windows-%REVISION%.exe
        mkdir target\artifacts
        copy target\wait-for-ports-* target\artifacts
    - uses: actions/upload-artifact@v1
      with:
        name: wait-for-ports artifacts from ${{runner.os}} build
        path: target/artifacts
  deploy:
    needs: [macos, linux, windows]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Publish to GitHub Packages Apache Maven
      env:
        REVISION: ${{ github.sha }}
      run: |
        ./mvnw \
          --batch-mode \
          --settings ./.mvn/github-packages-settings.xml \
          -Dsha1="${GITHUB_SHA}" \
          -Drevision="${REVISION}" \
          -DaltDeploymentRepository="github::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}" \
          deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
